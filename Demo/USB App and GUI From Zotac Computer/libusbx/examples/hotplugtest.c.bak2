/* -*- Mode: C; indent-tabs-mode:t ; c-basic-offset:8 -*- */
/*
 * libusb example program for hotplug API
 * Copyright Â© 2012-2013 Nathan Hjelm <hjelmn@mac.ccom>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 */

#include <stdlib.h>
#include <stdio.h>
#include <unistd.h>

#include "libusb.h"

static int count = 0;

int hotplug_callback(struct libusb_context *ctx, struct libusb_device *dev,
					libusb_hotplug_event event, void *user_data) 
{
	static libusb_device_handle *handle = NULL;
	struct libusb_device_descriptor desc;
	int rc;

	(void)libusb_get_device_descriptor(dev, &desc);

	if (LIBUSB_HOTPLUG_EVENT_DEVICE_ARRIVED == event) {
		rc = libusb_open(dev, &handle);
		if (LIBUSB_SUCCESS != rc) {
			printf("Cannot open USB device\n");
		}
	} else if (LIBUSB_HOTPLUG_EVENT_DEVICE_LEFT == event) {
		if (handle) {
			libusb_close(handle);
			handle = NULL;
		} 
	} else {
		printf("Unhandled event %d\n", event);
	}

	count++;
	return 0;
}

int main(void) 
{
	libusb_hotplug_callback_handle handle;
	int rc;

	libusb_init(NULL);
	rc = libusb_hotplug_register_callback(NULL, 
				LIBUSB_HOTPLUG_EVENT_DEVICE_ARRIVED | 
				LIBUSB_HOTPLUG_EVENT_DEVICE_LEFT, 0, 
				0x0930, 0x6545, LIBUSB_HOTPLUG_MATCH_ANY,
				hotplug_callback, NULL, &handle);
	if (LIBUSB_SUCCESS != rc) {
		printf("Error creating a hotplug callback\n");
		libusb_exit(NULL);
		return EXIT_FAILURE;
	}

	while (count < 2) {
		usleep(10000);
	}
	
	printf("Out of the loop\n");

	libusb_hotplug_deregister_callback(NULL, handle);
	libusb_exit(NULL);

	return 0;
}

